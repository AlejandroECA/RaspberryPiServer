{"ast":null,"code":"var _jsxFileName = \"/Users/alejandrocarrillo/Documents/Projects/RaspberryPi/server/raspberrypiserver/src/components/Rive-Components/WaterBar.component.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useRive, useStateMachineInput } from 'rive-react';\nimport waterRive from './715-1406-water-bar-demo.riv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WaterBar = ({\n  points\n}) => {\n  _s();\n\n  const STATE_MACHINE_NAME = 'State Machine';\n  const INPUT_NAME_1 = 'Level';\n  const {\n    rive,\n    RiveComponent\n  } = useRive({\n    src: waterRive,\n    stateMachines: STATE_MACHINE_NAME,\n    artboard: 'New Artboard',\n    autoplay: true\n  });\n  const ValueInput = useStateMachineInput(rive, STATE_MACHINE_NAME, INPUT_NAME_1);\n  return /*#__PURE__*/_jsxDEV(RiveComponent, {\n    style: {\n      width: '50vw',\n      height: '500px'\n    },\n    onClick: () => ValueInput.value = points === null ? 0 : points\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WaterBar, \"oiykfWRbZdSXUznoObl0mtSPlN4=\", false, function () {\n  return [useRive, useStateMachineInput];\n});\n\n_c = WaterBar;\nexport default WaterBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"WaterBar\");","map":{"version":3,"sources":["/Users/alejandrocarrillo/Documents/Projects/RaspberryPi/server/raspberrypiserver/src/components/Rive-Components/WaterBar.component.js"],"names":["React","useRive","useStateMachineInput","waterRive","WaterBar","points","STATE_MACHINE_NAME","INPUT_NAME_1","rive","RiveComponent","src","stateMachines","artboard","autoplay","ValueInput","width","height","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAiBC,oBAAjB,QAA6C,YAA7C;AAEA,OAAOC,SAAP,MAAuB,+BAAvB;;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAAA;;AAG3B,QAAMC,kBAAkB,GAAG,eAA3B;AACA,QAAMC,YAAY,GAAG,OAArB;AAEA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA0BR,OAAO,CAAC;AACpCS,IAAAA,GAAG,EAAEP,SAD+B;AAEpCQ,IAAAA,aAAa,EAACL,kBAFsB;AAGpCM,IAAAA,QAAQ,EAAE,cAH0B;AAIpCC,IAAAA,QAAQ,EAAE;AAJ0B,GAAD,CAAvC;AAQA,QAAMC,UAAU,GAAGZ,oBAAoB,CACnCM,IADmC,EAEnCF,kBAFmC,EAGnCC,YAHmC,CAAvC;AAQA,sBAEI,QAAC,aAAD;AACI,IAAA,KAAK,EAAE;AACHQ,MAAAA,KAAK,EAAC,MADH;AAEHC,MAAAA,MAAM,EAAC;AAFJ,KADX;AAMQ,IAAA,OAAO,EACP,MAAMF,UAAU,CAACG,KAAX,GAAkBZ,MAAM,KAAG,IAAT,GAAc,CAAd,GAAgBA;AAPhD;AAAA;AAAA;AAAA;AAAA,UAFJ;AAcH,CApCD;;GAAMD,Q;UAM8BH,O,EAQbC,oB;;;KAdjBE,Q;AAsCN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { useRive,useStateMachineInput } from 'rive-react';\n\nimport waterRive  from './715-1406-water-bar-demo.riv'\n\n\nconst WaterBar = ({points}) => {\n\n\n    const STATE_MACHINE_NAME = 'State Machine'\n    const INPUT_NAME_1 = 'Level'\n    \n    const { rive, RiveComponent } = useRive({\n        src: waterRive,\n        stateMachines:STATE_MACHINE_NAME,\n        artboard: 'New Artboard',\n        autoplay: true,\n\n    });\n    \n    const ValueInput = useStateMachineInput(\n        rive,\n        STATE_MACHINE_NAME,\n        INPUT_NAME_1\n    );\n\n\n\n    return (\n\n        <RiveComponent\n            style={{\n                width:'50vw',\n                height:'500px',\n\n            }}\n                onClick={\n                () => ValueInput.value=(points===null?0:points)\n            }\n        />\n    );\n\n}\n\nexport default WaterBar"]},"metadata":{},"sourceType":"module"}